from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from aiogram.utils.keyboard import InlineKeyboardBuilder

from data.db_connect import get_session
from data.services_requests import get_services


async def add_review_keyboard():
    review_clinic_keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üí¨–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –Ω–∞ –Ø–Ω–¥–µ–∫—Å –ö–∞—Ä—Ç–∞—Ö",
                    web_app=WebAppInfo(url="https://clck.ru/3F2E4p")
                )
            ],
            [
                InlineKeyboardButton(
                    text="üí¨–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ",
                    web_app=WebAppInfo(url="https://vk.com/vihlopexpert")
                )
            ],
            [
                InlineKeyboardButton(
                    text="üí¨–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –Ω–∞ –ê–í–ò–¢–û",
                    web_app=WebAppInfo(url="https://www.avito.ru/brands/8f51494e77196e4becadd0029507402d?src=sharing")
                )
            ],
            [InlineKeyboardButton(text="–ù–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                                  callback_data="main_keyboard")],
        ]
    )
    return review_clinic_keyboard


async def repair_services_keyboard(category_id: int):
    keyboard = InlineKeyboardBuilder()
    async for session in get_session():
        all_services = await get_services(session=session, category_id=category_id)
        if all_services:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–ø–∏—Å–æ–∫ —É—Å–ª—É–≥ –Ω–µ None
            for service in all_services:
                keyboard.add(InlineKeyboardButton(text=service.title, callback_data=f"service_{service.id}"))
    keyboard.add(InlineKeyboardButton(text='–ù–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data="main_keyboard"))
    return keyboard.adjust(1).as_markup()


async def tuning_services_keyboard(category_id: int):
    keyboard = InlineKeyboardBuilder()
    async for session in get_session():
        all_services = await get_services(session=session, category_id=category_id)
        if all_services:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–ø–∏—Å–æ–∫ —É—Å–ª—É–≥ –Ω–µ None
            for service in all_services:
                keyboard.add(InlineKeyboardButton(text=service.title, callback_data=f"service_{service.id}"))
    keyboard.add(InlineKeyboardButton(text='–ù–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data="main_keyboard"))
    return keyboard.adjust(1).as_markup()


async def chip_tuning_keyboard():
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(
                text="üì≤–°–≤—è–∑–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ —Ç–µ–ª–µ–≥—Ä–∞–º",
                url="https://t.me/TriBubi",
            ))
    keyboard.add(InlineKeyboardButton(text='–ù–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data="main_keyboard"))
    return keyboard.adjust(1).as_markup()


async def service_keyboard():
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(
                text="üì≤–°–≤—è–∑–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ —Ç–µ–ª–µ–≥—Ä–∞–º",
                url="https://t.me/TriBubi",
            ))
    keyboard.add(InlineKeyboardButton(text="–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="submit_application"))
    keyboard.add(InlineKeyboardButton(text='–ö –≤—ã–±–æ—Ä—É —É—Å–ª—É–≥', callback_data="back_services"))
    return keyboard.adjust(1).as_markup()
